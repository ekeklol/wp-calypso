/**
 * External dependencies
 */
import { connect } from 'react-redux';
import React, { PropTypes } from 'react';

/**
 * Internal dependencies
 */
import Card from 'components/card';
import { localize } from 'i18n-calypso';
import { getTwoFactorSupportedAuthTypes } from 'state/login/selectors';

const WaitingTwoFactorNotificationApproval = ( { supportedAuthTypes, translate } ) => (
	<form>
		<Card className="two-factor-authentication__push-notification-screen is-compact">
			<p>
				{ translate( 'We just sent a push notification to your WordPress mobile app. ' +
					'Swipe or tap to open and verify your login.' ) }
			</p>
			<div>
				<img className="two-factor-authentication__auth-code-preview" src="/calypso/images/login/pushauth.svg" />
			</div>
			<p>
				{ translate( 'Or, type in the verification code generated by your Authenticator app' +
					' or sent via text.' ) }
			</p>
		</Card>
		<Card className="two-factor-authentication__form-action is-compact">
			<p>
				{ translate( 'Or, continue to your account using:' ) }
			</p>
			{ supportedAuthTypes.indexOf( 'sms' ) > -1 && (
				<p>
					<a href="#">{ translate( 'A recovery code via text' ) }</a>
				</p>
			) }
			<p>
				<a href="#">{ translate( 'An Authenticator application' ) }</a>
			</p>
		</Card>
	</form>
);

WaitingTwoFactorNotificationApproval.propTypes = {
	supportedAuthTypes: PropTypes.array.isRequired,
	translate: PropTypes.func.isRequired,
};

export default connect(
	( state ) => ( {
		supportedAuthTypes: getTwoFactorSupportedAuthTypes( state ),
	} )
)( localize( WaitingTwoFactorNotificationApproval ) );
